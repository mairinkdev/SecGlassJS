/**
 * SecGlassJS - Painel de Ferramentas de Segurança (Versão Minificada)
 * Powered by @mairinkdev
 * Uso: javascript:fetch("https://raw.githubusercontent.com/mairinkdev/SecGlassJS/main/SecGlass.min.js").then(t=>t.text()).then(eval);
 */
(function () { const e = { baseURL: (() => { const e = document.currentScript; return e ? (new URL(e.src)).protocol + "//" + e.host + e.pathname.substring(0, e.pathname.lastIndexOf("/") + 1) : window.location.href.substring(0, window.location.href.lastIndexOf("/") + 1) })(), version: "1.0.0", debug: !1 }, t = { info: t => e.debug && console.info(`[SecGlassJS] ${t}`), error: e => console.error(`[SecGlassJS] ${e}`), warn: e => console.warn(`[SecGlassJS] ${e}`) }, n = { loadedResources: [], loadCSS: e => new Promise((t, o) => { const s = document.createElement("link"); s.rel = "stylesheet", s.href = e, s.onload = () => { n.loadedResources.push(e), t(s) }, s.onerror = () => o(new Error(`Falha ao carregar CSS: ${e}`)), document.head.appendChild(s) }), loadJS: e => new Promise((t, o) => { const s = document.createElement("script"); s.src = e, s.async = !0, s.onload = () => { n.loadedResources.push(e), t(s) }, s.onerror = () => o(new Error(`Falha ao carregar JS: ${e}`)), document.body.appendChild(s) }), loadHTML: e => fetch(e).then(e => { if (!e.ok) throw new Error(`Erro HTTP: ${e.status}`); return e.text() }).then(t => (n.loadedResources.push(e), t)) }, o = { isInitialized: !1, isDOMReady: !1, isPanelVisible: !1, activeToolId: null, tools: [] }; function s() { const e = document.createElement("div"); return e.id = "secglass-root", document.body.appendChild(e), e } async function a() { t.info("Carregando recursos visuais..."); await n.loadCSS("https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"); const o = await fetch(`${e.baseURL}visuals/main.css`).then(e => e.text()).catch(e => (t.error(`Falha ao carregar CSS principal: ${e.message}`), function () { return `\n            #secglass-root * {\n                margin: 0;\n                padding: 0;\n                box-sizing: border-box;\n                font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;\n            }\n            \n            #secglass-panel {\n                position: fixed;\n                top: 20px;\n                right: 20px;\n                width: 350px;\n                height: 500px;\n                background: rgba(30, 30, 30, 0.85);\n                backdrop-filter: blur(10px);\n                -webkit-backdrop-filter: blur(10px);\n                border-radius: 15px;\n                border: 1px solid rgba(255, 255, 255, 0.1);\n                box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n                color: #e0e0e0;\n                z-index: 999999;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n                transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n            }\n            \n            #secglass-panel.hidden {\n                transform: translateX(110%);\n                opacity: 0;\n            }\n            \n            #secglass-header {\n                padding: 15px;\n                background: rgba(0, 0, 0, 0.2);\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n            }\n            \n            #secglass-header h1 {\n                font-size: 1.2rem;\n                font-weight: 600;\n                margin: 0;\n                background: linear-gradient(90deg, #5e35b1, #42a5f5);\n                -webkit-background-clip: text;\n                background-clip: text;\n                -webkit-text-fill-color: transparent;\n            }\n            \n            #secglass-tools {\n                flex: 1;\n                overflow-y: auto;\n                padding: 10px;\n            }\n            \n            .secglass-tool-button {\n                display: flex;\n                align-items: center;\n                gap: 10px;\n                padding: 10px;\n                background: rgba(255, 255, 255, 0.05);\n                border: none;\n                border-radius: 10px;\n                color: #e0e0e0;\n                cursor: pointer;\n                width: 100%;\n                text-align: left;\n                margin-bottom: 8px;\n                transition: all 0.2s;\n            }\n            \n            .secglass-tool-button:hover {\n                background: rgba(255, 255, 255, 0.1);\n                transform: translateY(-2px);\n            }\n            \n            .secglass-tool-button i {\n                color: #42a5f5;\n                font-size: 1rem;\n                width: 20px;\n                text-align: center;\n            }\n            \n            #secglass-footer {\n                padding: 10px;\n                font-size: 0.8rem;\n                opacity: 0.7;\n                text-align: center;\n                background: rgba(0, 0, 0, 0.2);\n            }\n            \n            #secglass-tool-container {\n                position: fixed;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                width: 80%;\n                max-width: 800px;\n                height: 70vh;\n                background: rgba(40, 40, 40, 0.9);\n                backdrop-filter: blur(10px);\n                -webkit-backdrop-filter: blur(10px);\n                border-radius: 15px;\n                border: 1px solid rgba(255, 255, 255, 0.1);\n                box-shadow: 0 10px 40px rgba(0, 0, 0, 0.5);\n                z-index: 999998;\n                display: none;\n                flex-direction: column;\n                overflow: hidden;\n            }\n            \n            #secglass-tool-header {\n                padding: 15px;\n                background: rgba(0, 0, 0, 0.3);\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n            }\n            \n            #secglass-tool-title {\n                font-size: 1.2rem;\n                font-weight: 500;\n            }\n            \n            #secglass-tool-close {\n                background: rgba(255, 255, 255, 0.1);\n                border: none;\n                color: #e0e0e0;\n                width: 30px;\n                height: 30px;\n                border-radius: 15px;\n                cursor: pointer;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                transition: all 0.2s;\n            }\n            \n            #secglass-tool-close:hover {\n                background: rgba(255, 255, 255, 0.2);\n            }\n            \n            #secglass-tool-content {\n                flex: 1;\n                padding: 20px;\n                overflow-y: auto;\n            }\n            \n            .secglass-overlay {\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                background: rgba(0, 0, 0, 0.5);\n                backdrop-filter: blur(3px);\n                -webkit-backdrop-filter: blur(3px);\n                z-index: 999997;\n                display: none;\n            }\n        ` }())), s = document.createElement("style"); s.id = "secglass-styles", s.textContent = o, document.head.appendChild(s) } function i() { t.info("Renderizando interface..."); const e = s(); e.innerHTML = '\n            <div id="secglass-panel" class="hidden">\n                <div id="secglass-header">\n                    <h1>SecGlass<span style="font-weight:400">JS</span></h1>\n                    <button id="secglass-close-btn">\n                        <i class="fas fa-times"></i>\n                    </button>\n                </div>\n                <div id="secglass-search">\n                    <input type="text" placeholder="Pesquisar ferramentas (Ctrl+K)">\n                </div>\n                <div id="secglass-tools">\n                    <!-- Ferramentas serão injetadas aqui -->\n                </div>\n                <div id="secglass-footer">\n                    Powered by <a href="https://github.com/mairinkdev" target="_blank">@mairinkdev</a>\n                </div>\n            </div>\n            <div id="secglass-tool-container">\n                <div id="secglass-tool-header">\n                    <div id="secglass-tool-title">Nome da Ferramenta</div>\n                    <button id="secglass-tool-close">\n                        <i class="fas fa-times"></i>\n                    </button>\n                </div>\n                <div id="secglass-tool-content"></div>\n            </div>\n            <div class="secglass-overlay"></div>\n        ', setTimeout(() => { document.getElementById("secglass-panel").classList.remove("hidden") }, 100), function () { document.getElementById("secglass-close-btn").addEventListener("click", r), document.getElementById("secglass-tool-close").addEventListener("click", l), document.addEventListener("keydown", e => { e.ctrlKey && "k" === e.key && (e.preventDefault(), r()) }), document.querySelector(".secglass-overlay").addEventListener("click", l) }() } function r() { const e = document.getElementById("secglass-panel"); e.classList.toggle("hidden"), o.isPanelVisible = !e.classList.contains("hidden") } async function c() { t.info("Carregando ferramentas..."), o.tools = [{ id: "ipinfo", name: "IP Info", description: "Consulta informações detalhadas sobre endereços IP", icon: "fa-globe", path: `${e.baseURL}tools/ipinfo.js` }, { id: "reverseshell", name: "Reverse Shell Generator", description: "Gera comandos para conexões reversas", icon: "fa-terminal", path: `${e.baseURL}tools/reverseshell.js` }, { id: "xss", name: "XSS Payload Launcher", description: "Biblioteca de payloads para testes XSS", icon: "fa-code", path: `${e.baseURL}tools/xss.js` }, { id: "headers", name: "HTTP Header Scanner", description: "Analisa cabeçalhos HTTP de segurança", icon: "fa-shield-alt", path: `${e.baseURL}tools/headers.js` }, { id: "subfinder", name: "Subdomain Finder", description: "Descobre subdomínios de um domínio alvo", icon: "fa-sitemap", path: `${e.baseURL}tools/subfinder.js` }], function () { const e = document.getElementById("secglass-tools"); o.tools.forEach(t => { const n = document.createElement("button"); n.className = "secglass-tool-button", n.dataset.toolId = t.id, n.innerHTML = `\n                <i class="fas ${t.icon}"></i>\n                <div>\n                    <span class="tool-name">${t.name}</span>\n                    <small class="tool-desc">${t.description}</small>\n                </div>\n            `, n.addEventListener("click", () => d(t)), e.appendChild(n) }) }() } function d(e) { o.activeToolId = e.id, document.getElementById("secglass-tool-title").textContent = e.name; const n = document.getElementById("secglass-tool-content"); n.innerHTML = `\n            <div class="tool-loading">\n                <i class="fas fa-spinner fa-spin"></i>\n                <p>Carregando ${e.name}...</p>\n            </div>\n        `, document.getElementById("secglass-tool-container").style.display = "flex", document.querySelector(".secglass-overlay").style.display = "block", fetch(e.path).then(e => { if (!e.ok) throw new Error(`Erro ao carregar ferramenta: ${e.status}`); return e.text() }).then(t => { const o = { container: n, name: e.name, id: e.id }, s = new Function("tool", t); n.innerHTML = "", s(o) }).catch(o => { n.innerHTML = `\n                    <div class="error-message">\n                        <i class="fas fa-exclamation-triangle"></i>\n                        <h3>Erro ao carregar ferramenta</h3>\n                        <p>${o.message}</p>\n                    </div>\n                `, t.error(`Falha ao carregar ferramenta ${e.id}: ${o.message}`) }) } function l() { document.getElementById("secglass-tool-container").style.display = "none", document.querySelector(".secglass-overlay").style.display = "none", o.activeToolId = null } async function g() { if (!o.isInitialized) try { t.info("Inicializando SecGlassJS..."), await a(), i(), await c(), o.isInitialized = !0, t.info("SecGlassJS inicializado com sucesso") } catch (e) { t.error(`Falha na inicialização: ${e.message}`) } } window.SecGlassUtils = { showToast: function (e, t = "info") { document.querySelectorAll(".secglass-toast").forEach(e => e.remove()); const n = document.createElement("div"); n.className = `secglass-toast secglass-toast-${t}`, n.innerHTML = `\n            <div class="secglass-toast-content">\n                <i class="fas ${"error" === t ? "fa-exclamation-circle" : "fa-check-circle"}"></i>\n                <span>${e}</span>\n            </div>\n            <button class="secglass-toast-close">\n                <i class="fas fa-times"></i>\n            </button>\n        `; const o = document.createElement("style"); document.getElementById("secglass-toast-styles") || (o.id = "secglass-toast-styles", o.textContent = "\n                .secglass-toast {\n                    position: fixed;\n                    bottom: 20px;\n                    right: 20px;\n                    background: rgba(30, 30, 30, 0.9);\n                    backdrop-filter: blur(10px);\n                    -webkit-backdrop-filter: blur(10px);\n                    border-radius: 10px;\n                    padding: 15px;\n                    color: white;\n                    display: flex;\n                    align-items: center;\n                    justify-content: space-between;\n                    gap: 10px;\n                    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n                    z-index: 9999999;\n                    min-width: 250px;\n                    max-width: 350px;\n                    animation: secglass-toast-slide-in 0.3s ease-out forwards;\n                }\n                \n                .secglass-toast-content {\n                    display: flex;\n                    align-items: center;\n                    gap: 10px;\n                }\n                \n                .secglass-toast-info i {\n                    color: #42a5f5;\n                }\n                \n                .secglass-toast-success i {\n                    color: #66bb6a;\n                }\n                \n                .secglass-toast-error i {\n                    color: #ff5252;\n                }\n                \n                .secglass-toast-close {\n                    background: transparent;\n                    border: none;\n                    color: rgba(255, 255, 255, 0.6);\n                    cursor: pointer;\n                    padding: 5px;\n                    transition: all 0.2s;\n                }\n                \n                .secglass-toast-close:hover {\n                    color: white;\n                }\n                \n                @keyframes secglass-toast-slide-in {\n                    from {\n                        transform: translateX(100%);\n                        opacity: 0;\n                    }\n                    to {\n                        transform: translateX(0);\n                        opacity: 1;\n                    }\n                }\n                \n                @keyframes secglass-toast-slide-out {\n                    from {\n                        transform: translateX(0);\n                        opacity: 1;\n                    }\n                    to {\n                        transform: translateX(100%);\n                        opacity: 0;\n                    }\n                }\n            ", document.head.appendChild(o)), document.body.appendChild(n); const s = n.querySelector(".secglass-toast-close"); return s.addEventListener("click", () => { n.style.animation = "secglass-toast-slide-out 0.3s forwards", setTimeout(() => n.remove(), 300) }), setTimeout(() => { document.body.contains(n) && (n.style.animation = "secglass-toast-slide-out 0.3s forwards", setTimeout(() => n.remove(), 300)) }, 5e3), n }, copyToClipboard: function (e) { return new Promise((t, n) => { navigator.clipboard.writeText(e).then(() => { this.showToast("Copiado para a área de transferência!", "success"), t(!0) }).catch(e => { this.showToast("Erro ao copiar texto", "error"), console.error("Erro ao copiar:", e), n(e) }) }) }, escapeHTML: function (e) { return e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;") }, formatJSON: function (e) { if ("string" == typeof e) try { e = JSON.parse(e) } catch (t) { return this.escapeHTML(e) } return this.syntaxHighlight(JSON.stringify(e, null, 2)) }, syntaxHighlight: function (e) { return e = e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;"), e.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, (function (e) { let t = "json-number"; return /^"/.test(e) ? t = /:$/.test(e) ? "json-key" : "json-string" : /true|false/.test(e) ? t = "json-boolean" : /null/.test(e) && (t = "json-null"), '<span class="' + t + '">' + e + "</span>" })) }, addJSONStyles: function () { if (!document.getElementById("secglass-json-styles")) { const e = document.createElement("style"); e.id = "secglass-json-styles", e.textContent = '\n                .json-container {\n                    background: rgba(0, 0, 0, 0.2);\n                    border-radius: 8px;\n                    padding: 15px;\n                    overflow-x: auto;\n                    font-family: \'Courier New\', monospace;\n                    font-size: 0.9rem;\n                    white-space: pre;\n                }\n                \n                .json-container::-webkit-scrollbar {\n                    height: 8px;\n                    width: 8px;\n                }\n                \n                .json-container::-webkit-scrollbar-track {\n                    background: transparent;\n                }\n                \n                .json-container::-webkit-scrollbar-thumb {\n                    background: rgba(255, 255, 255, 0.1);\n                    border-radius: 4px;\n                }\n                \n                .json-key {\n                    color: #9cdcfe;\n                }\n                \n                .json-string {\n                    color: #ce9178;\n                }\n                \n                .json-number {\n                    color: #b5cea8;\n                }\n                \n                .json-boolean {\n                    color: #569cd6;\n                }\n                \n                .json-null {\n                    color: #569cd6;\n                }\n            ', document.head.appendChild(e) } }, createInput: function (e) { const { id: t, label: n, type: o = "text", placeholder: s = "", value: a = "", onChange: i = null } = e, r = document.createElement("div"); r.className = "secglass-input-group"; if (n) { const e = document.createElement("label"); e.setAttribute("for", t), e.textContent = n, r.appendChild(e) } const c = document.createElement("input"); return c.id = t, c.type = o, c.className = "secglass-input", c.placeholder = s, c.value = a, i && c.addEventListener("input", i), r.appendChild(c), r }, createButton: function (e) { const { text: t, icon: n = null, onClick: o = null, type: s = "primary", size: a = "medium" } = e, i = document.createElement("button"); if (i.className = `secglass-button secglass-button-${s} secglass-button-${a}`, n) { const e = document.createElement("i"); e.className = `fas ${n}`, i.appendChild(e) } const r = document.createElement("span"); return r.textContent = t, i.appendChild(r), o && i.addEventListener("click", o), i }, addFormStyles: function () { if (!document.getElementById("secglass-form-styles")) { const e = document.createElement("style"); e.id = "secglass-form-styles", e.textContent = '\n                .secglass-input-group {\n                    margin-bottom: 15px;\n                    display: flex;\n                    flex-direction: column;\n                    gap: 5px;\n                }\n                \n                .secglass-input-group label {\n                    font-size: 0.9rem;\n                    opacity: 0.8;\n                }\n                \n                .secglass-input {\n                    background: rgba(255, 255, 255, 0.1);\n                    border: 1px solid rgba(255, 255, 255, 0.2);\n                    border-radius: 8px;\n                    padding: 10px 15px;\n                    color: white;\n                    font-size: 0.95rem;\n                    outline: none;\n                    transition: all 0.2s;\n                }\n                \n                .secglass-input:focus {\n                    border-color: rgba(255, 255, 255, 0.3);\n                    box-shadow: 0 0 0 2px rgba(124, 77, 255, 0.2);\n                }\n                \n                .secglass-select {\n                    appearance: none;\n                    background-image: url("data:image/svg+xml,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'16\' height=\'16\' viewBox=\'0 0 24 24\' fill=\'none\' stroke=\'white\' stroke-width=\'2\' stroke-linecap=\'round\' stroke-linejoin=\'round\'%3E%3Cpolyline points=\'6 9 12 15 18 9\'%3E%3C/polyline%3E%3C/svg%3E");\n                    background-repeat: no-repeat;\n                    background-position: right 15px center;\n                    background-size: 16px;\n                    padding-right: 40px;\n                }\n                \n                .secglass-button {\n                    display: inline-flex;\n                    align-items: center;\n                    justify-content: center;\n                    gap: 8px;\n                    border: none;\n                    border-radius: 8px;\n                    cursor: pointer;\n                    font-weight: 500;\n                    transition: all 0.2s;\n                    white-space: nowrap;\n                    padding: 0 20px;\n                }\n                \n                .secglass-button i {\n                    font-size: 1rem;\n                }\n                \n                .secglass-button-primary {\n                    background: rgba(124, 77, 255, 0.8);\n                    color: white;\n                }\n                \n                .secglass-button-primary:hover {\n                    background: rgba(124, 77, 255, 0.9);\n                    transform: translateY(-2px);\n                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n                }\n                \n                .secglass-button-secondary {\n                    background: rgba(255, 255, 255, 0.1);\n                    color: white;\n                }\n                \n                .secglass-button-secondary:hover {\n                    background: rgba(255, 255, 255, 0.2);\n                    transform: translateY(-2px);\n                }\n                \n                .secglass-button-danger {\n                    background: rgba(244, 67, 54, 0.8);\n                    color: white;\n                }\n                \n                .secglass-button-danger:hover {\n                    background: rgba(244, 67, 54, 0.9);\n                    transform: translateY(-2px);\n                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n                }\n                \n                .secglass-button-small {\n                    height: 32px;\n                    font-size: 0.8rem;\n                }\n                \n                .secglass-button-medium {\n                    height: 40px;\n                    font-size: 0.9rem;\n                }\n                \n                .secglass-button-large {\n                    height: 48px;\n                    font-size: 1rem;\n                }\n                \n                .secglass-form-row {\n                    display: flex;\n                    gap: 10px;\n                    margin-bottom: 15px;\n                }\n                \n                .secglass-form-col {\n                    flex: 1;\n                }\n            ', document.head.appendChild(e) } } }"loading" === document.readyState ? document.addEventListener("DOMContentLoaded", g) : g(), window.SecGlassJS = { toggle: r, version: e.version } })();
